@model ProyectoFinal.Models.SessionModel
@using ProyectoFinal.Models
@{
	ViewBag.Title = "Play";
	ViewBag.ShowFooter = false;
}

<div class="deck">
	@*@foreach (var _ in Enumerable.Range(0, Model.DeckCount))
	{
		@Html.Partial("Card", new Card { Color = (Color)(-1), Rank = (Rank)(-1) })
	}*@
</div>
<div class="discard-pile">
	@foreach (var _ in Enumerable.Range(0, Model.DiscardPileCount))
	{
		@Html.Partial("Card", new Card { Color = (Color)(-1), Rank = (Rank)(-1) })
	}
	@Html.Partial("Card", Model.DiscardPileTop)
</div>

<div class="name-wrapper" style="bottom: 160px; left: calc(50% - 100px);">
	<div id="user-@Model.Hands[0].User.Id" class="name @(Model.Hands[0].IsTheirTurn ? "active" : "")">
		<img src="@Url.Action("Photo", "Account", new { userId = Model.Hands[0].User.Id })"/>
		<span>@Model.Hands[0].User.Name</span>
	</div>
</div>
<div id="my-hand" class="cards" style="position: fixed; width: calc(100% - 320px); bottom: 0; left: 160px;">
	@foreach (var card in Model.Hands[0].Cards)
	{
		@Html.Partial("Card", card)
	}
</div>

<div class="name-wrapper" style="right: 160px; bottom: calc(50% - 120px); transform: rotate(-90deg)">
	<div id="user-@Model.Hands[1].User.Id" class="name @(Model.Hands[1].IsTheirTurn ? "active" : "")">
		<img src="@Url.Action("Photo", "Account", new { userId = Model.Hands[1].User.Id })" />
		<span>@Model.Hands[1].User.Name</span>
	</div>
</div>
<div id="hand-@Model.Hands[1].User.Id" class="cards cards-rotate-270" style="position: fixed; height: calc(100% - 360px); top: 200px; right: 0; flex-direction: column; transform: rotate(180deg);">
	@foreach (var card in Model.Hands[1].Cards)
	{
		@Html.Partial("Card", card)
	}
</div>

<div class="name-wrapper" style="top: 200px; right: calc(50% - 100px); transform: rotate(180deg)">
	<div id="user-@Model.Hands[2].User.Id" class="name @(Model.Hands[2].IsTheirTurn ? "active" : "")">
		<img src="@Url.Action("Photo", "Account", new { userId = Model.Hands[2].User.Id })" />
		<span>@Model.Hands[2].User.Name</span>
	</div>
</div>
<div id="hand-@Model.Hands[2].User.Id" class="cards" style="position: fixed; width: calc(100% - 320px); top: 40px; left: 160px; transform: rotate(180deg);">
	@foreach (var card in Model.Hands[2].Cards)
	{
		@Html.Partial("Card", card)
	}
</div>


<div class="name-wrapper" style="left: 160px; top: calc(50% - 80px); transform: rotate(90deg)">
	<div id="user-@Model.Hands[3].User.Id" class="name @(Model.Hands[3].IsTheirTurn ? "active" : "")">
		<img src="@Url.Action("Photo", "Account", new { userId = Model.Hands[3].User.Id })" />
		<span>@Model.Hands[3].User.Name</span>
	</div>
</div>
<div id="hand-@Model.Hands[3].User.Id" class="cards cards-rotate-270" style="position: fixed; height: calc(100% - 360px); top: 200px; left: 0; flex-direction: column;">
	@foreach (var card in Model.Hands[3].Cards)
	{
		@Html.Partial("Card", card)
	}
</div>

@section scripts {

<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<script src="~/signalr/hubs"></script>
<script>
	$(function () {
		var userId = "@Model.Hands[0].User.Id";
		var isMyTurn = @(Model.Hands[0].IsTheirTurn ? "true" : "false");
		var game = $.connection.gameHub;

		game.client.update = function (info) {
			isMyTurn = info.NextUserId == userId;
			if (info.PreviousUserId != userId) {
				var $newCard = $(info.CardHtml.trim());
				$("#hand-" + info.PreviousUserId).find(".card").last().remove();
				$("#hand-" + info.PreviousUserId).append($newCard);

				var $discardPileTop = $(".discard-pile .card").last();
				var offsetLeft = $discardPileTop.offset().left - $newCard.offset().left;
				var offsetTop = $discardPileTop.offset().top - ($newCard.offset().top - 0.3);

				$newCard.appendTo(".discard-pile");

				$newCard.velocity({
					translateX: "-=" + (offsetLeft) + "px",
					translateY: "-=" + (offsetTop) + "px",
				}, { duration: 0 });

				$newCard.velocity({
					translateX: "+=" + (offsetLeft) + "px",
					translateY: "+=" + (offsetTop) + "px",
				}, function () {
					$newCard.css("transform", "");
					$("#user-" + info.PreviousUserId).removeClass("active");
					$("#user-" + info.NextUserId).addClass("active");
				});
			}
			else {
				$("#user-" + info.PreviousUserId).removeClass("active");
				$("#user-" + info.NextUserId).addClass("active");
			}
		}

		var acceptMove = function () { };
		var denyMove = function () { };

		game.client.acceptMove = function () { acceptMove(); }
		game.client.denyMove = function () { denyMove(); }

		$.connection.hub.qs = { "sessionId": "@Model.Id" };
		$.connection.hub.start().done(function () {
			$(".cards").on("click", ".card", function (event) {
				if (!isMyTurn) return;

				var $this = $(this);
				var $discardPileTop = $(".discard-pile .card").last();

				//if ($discardPileTop.data("color") == $this.data("color") || $discardPileTop.data("rank") == $this.data("rank")) {

					var offsetLeft = $discardPileTop.offset().left - $this.offset().left;
					var offsetTop = $discardPileTop.offset().top - ($this.offset().top - 0.3);

					$this.velocity({
						translateX: "+=" + (offsetLeft) + "px",
						translateY: "+=" + (offsetTop) + "px",
					}, function () {
						acceptMove = function () {
							$this.css("transform", "");
							$this.appendTo(".discard-pile");
							$(".name").removeClass("active");
						};
						denyMove = function () {
							$this.velocity({
								translateX: "-=" + (offsetLeft) + "px",
								translateY: "-=" + (offsetTop) + "px",
							});
						};
						game.server.useCard("@Model.Id", $this.attr("id").replace("card-", ""));
					});
				//}
			});
		});

	});
</script>
}